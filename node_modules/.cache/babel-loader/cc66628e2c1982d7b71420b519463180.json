{"ast":null,"code":"import _slicedToArray from \"/Users/Hsi/Desktop/WebProg2019/mid/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hsi/Desktop/WebProg2019/mid/src/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./index.css\";\nimport webSocket from \"socket.io-client\";\nimport File from \"./components/File\";\nimport Chat from \"./components/Question\"; //=============================Variables=================================\n\nconst Main = () => {\n  // Getting Elements\n  const element = id => {\n    return document.getElementById(id);\n  };\n\n  const status = element(\"status\");\n  const messages = element(\"messages\");\n  const textarea = element(\"textarea\");\n  const username = element(\"username\");\n  const clearBtn = element(\"clear\");\n  const fileName = element(\"filename\");\n  const fileUrl = element(\"url\");\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        socket = _useState2[0],\n        setSocket = _useState2[1]; //==============================Server=================================\n\n\n  const connectWebSocket = () => {\n    setSocket(webSocket(\"http://localhost:3000\")); //開啟\n  };\n\n  useEffect(() => {\n    if (socket) {\n      console.log(status.textContent);\n      initWebSocket();\n    }\n  }, [socket]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    socket.on(\"getMessage\", message => {\n      console.log(message);\n    });\n    socket.on(\"fileOutput\", data => {\n      const showPdf = element(\"showPdf\");\n      showPdf.setAttribute(\"src\", data.url);\n    });\n    socket.on(\"init\", data => {\n      if (data.length && messages.childNodes.length === 0) updateList(data);\n    });\n    socket.on(\"output\", data => {\n      if (data.length) updateList(data);\n    });\n  }; //=======================================Ask===========================================\n\n\n  const sendMessage = () => {\n    //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n    socket.emit(\"getMessage\", \"只回傳給發送訊息的 client\");\n  };\n\n  const updateList = data => {\n    for (let x = 0; x < data.length; x++) {\n      // Building out message div\n      const message = document.createElement(\"div\");\n      message.setAttribute(\"class\", \"chat-message\");\n      message.textContent = data[x].name + \": \" + data[x].body;\n      messages.appendChild(message); //            messages.insertBefore(message, messages.firstChild)\n    }\n  };\n\n  const Question = e => {\n    if (e.key === \"Enter\" && e.shiftKey == false) {\n      // Emit to server input\n      socket.emit(\"input\", {\n        name: username.value,\n        body: textarea.value\n      });\n      e.preventDefault();\n    }\n  }; //======================================File=======================================\n\n\n  const add = e => {\n    if (e.key === \"Enter\" && e.shiftKey == false) {\n      // Emit to server input\n      console.log(\"launch\");\n      socket.emit(\"file\", {\n        filename: fileName.value,\n        url: fileUrl.value\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"button\",\n    value: \"\\u9023\\u7DDA\",\n    onClick: connectWebSocket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"button\",\n    value: \"\\u9001\\u51FA\\u8A0A\\u606F\",\n    onClick: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"clear\",\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Clear\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(File, {\n    add: add,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"iframe\", {\n    src: \"https://www.tutorialspoint.com/mongodb/mongodb_tutorial.pdf\",\n    id: \"showPdf\",\n    frameBorder: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(Chat, {\n    ask: Question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))));\n};\n\nReactDom.render(React.createElement(Main, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/Hsi/Desktop/WebProg2019/mid/src/index.js"],"names":["React","useState","useEffect","ReactDom","webSocket","File","Chat","Main","element","id","document","getElementById","status","messages","textarea","username","clearBtn","fileName","fileUrl","socket","setSocket","connectWebSocket","console","log","textContent","initWebSocket","on","message","data","showPdf","setAttribute","url","length","childNodes","updateList","sendMessage","emit","x","createElement","name","body","appendChild","Question","e","key","shiftKey","value","preventDefault","add","filename","render"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./index.css\";\nimport webSocket from \"socket.io-client\";\nimport File from \"./components/File\";\nimport Chat from \"./components/Question\";\n//=============================Variables=================================\nconst Main = () => {\n  // Getting Elements\n  const element = id => {\n    return document.getElementById(id);\n  };\n  const status = element(\"status\");\n  const messages = element(\"messages\");\n  const textarea = element(\"textarea\");\n  const username = element(\"username\");\n  const clearBtn = element(\"clear\");\n  const fileName = element(\"filename\");\n  const fileUrl = element(\"url\");\n  const [socket, setSocket] = useState(null);\n  //==============================Server=================================\n  const connectWebSocket = () => {\n    setSocket(webSocket(\"http://localhost:3000\"));\n    //開啟\n  };\n\n  useEffect(() => {\n    if (socket) {\n      console.log(status.textContent);\n      initWebSocket();\n    }\n  }, [socket]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    socket.on(\"getMessage\", message => {\n      console.log(message);\n    });\n\n    socket.on(\"fileOutput\", data => {\n      const showPdf = element(\"showPdf\");\n\n      showPdf.setAttribute(\"src\", data.url);\n    });\n\n    socket.on(\"init\", data => {\n      if (data.length && messages.childNodes.length === 0) updateList(data);\n    });\n\n    socket.on(\"output\", data => {\n      if (data.length) updateList(data);\n    });\n  };\n  //=======================================Ask===========================================\n  const sendMessage = () => {\n    //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n    socket.emit(\"getMessage\", \"只回傳給發送訊息的 client\");\n  };\n\n  const updateList = data => {\n    for (let x = 0; x < data.length; x++) {\n      // Building out message div\n      const message = document.createElement(\"div\");\n      message.setAttribute(\"class\", \"chat-message\");\n      message.textContent = data[x].name + \": \" + data[x].body;\n      messages.appendChild(message);\n      //            messages.insertBefore(message, messages.firstChild)\n    }\n  };\n  const Question = e => {\n    if (e.key === \"Enter\" && e.shiftKey == false) {\n      // Emit to server input\n      socket.emit(\"input\", {\n        name: username.value,\n        body: textarea.value\n      });\n      e.preventDefault();\n    }\n  };\n  //======================================File=======================================\n\n  const add = e => {\n    if (e.key === \"Enter\" && e.shiftKey == false) {\n      // Emit to server input\n      console.log(\"launch\");\n      socket.emit(\"file\", {\n        filename: fileName.value,\n        url: fileUrl.value\n      });\n    }\n  };\n\n  return (\n    <div className=\"Wrapper\">\n      <input type=\"button\" value=\"連線\" onClick={connectWebSocket} />\n      <input type=\"button\" value=\"送出訊息\" onClick={sendMessage} />\n      <div className=\"container\">\n        <button id=\"clear\" className=\"btn btn-danger\">\n          Clear\n        </button>\n        <div className=\"row\">\n          <div className=\"Add\">\n            <File add={add} />\n            <iframe\n              src=\"https://www.tutorialspoint.com/mongodb/mongodb_tutorial.pdf\"\n              id=\"showPdf\"\n              frameBorder=\"0\"\n            />\n          </div>\n          <Chat ask={Question} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nReactDom.render(<Main />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}