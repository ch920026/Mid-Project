{"ast":null,"code":"import _slicedToArray from \"/Users/Hsi/Desktop/WebProg2019/mid/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hsi/Desktop/WebProg2019/mid/src/App.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter, NavLink, Switch, Route, Redirect } from \"react-router-dom\";\nimport ReactDom from \"react-dom\";\nimport \"./index.css\";\nimport webSocket from \"socket.io-client\";\nimport File from \"./components/File\";\nimport Chat from \"./components/Question\";\nimport Menu from \"./components/menu\";\nimport PDF from \"./components/PDF\";\nimport { Button, Input } from \"antd\";\nimport \"antd/dist/antd.css\"; //=============================Variables=================================\n\nfunction App() {\n  // Getting Elements\n  const element = id => {\n    return document.getElementById(id);\n  };\n\n  const status = element(\"status\");\n  const messages = element(\"messages\");\n  const textarea = element(\"textarea\");\n  const username = element(\"username\");\n  const clearBtn = element(\"clear\");\n  const fileName = element(\"filename\");\n  const fileUrl = element(\"url\");\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        socket = _useState2[0],\n        setSocket = _useState2[1];\n\n  let connect = 0; //==============================Server=================================\n\n  const connectWebSocket = () => {\n    setSocket(webSocket(\"http://localhost:3000\")); //開啟\n  };\n\n  useEffect(() => {\n    if (connect === 0) {\n      setSocket(webSocket(\"http://localhost:3000\"));\n      connect = 1;\n    }\n\n    if (socket) {\n      c; //onsole.log(status.textContent);\n\n      initWebSocket();\n    }\n  }, [socket]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    socket.on(\"getMessage\", message => {\n      console.log(message);\n    });\n    socket.on(\"fileOutput\", data => {\n      const showPdf = element(\"showPdf\");\n      console.log(PDF); //showPdf.setAttribute(\"src\", data.url);\n    });\n    socket.on(\"init\", data => {\n      if (data.length && messages.childNodes.length === 0) updateList(data);\n    });\n    socket.on(\"output\", data => {\n      if (data.length) updateList(data);\n    });\n    socket.on(\"cleared\", () => {\n      clearList();\n    });\n  }; //=======================================Ask===========================================\n\n\n  const sendMessage = () => {\n    //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n    socket.emit(\"getMessage\", \"只回傳給發送訊息的 client\");\n  };\n\n  const updateList = data => {\n    for (let x = 0; x < data.length; x++) {\n      // Building out message div\n      const message = document.createElement(\"div\");\n      message.setAttribute(\"class\", \"chat-message\");\n      message.textContent = data[x].name + \": \" + data[x].body;\n      messages.appendChild(message); //            messages.insertBefore(message, messages.firstChild)\n    }\n  };\n\n  const Question = e => {\n    if (e.key === \"Enter\" && e.shiftKey == false) {\n      // Emit to server input\n      socket.emit(\"input\", {\n        name: username.value,\n        body: textarea.value\n      });\n      e.preventDefault();\n    }\n  }; //=================================================================================\n\n\n  const Clear = () => {\n    clearList();\n    socket.emit(\"clear\");\n  }; // Clear Message\n\n\n  const clearList = () => {\n    messages.textContent = \"\";\n    username.value = \"\";\n    username.focus();\n  }; //======================================File=======================================\n\n\n  const add = e => {\n    if (e.key === \"Enter\" && e.shiftKey == false) {\n      // Emit to server input\n      socket.emit(\"file\", {\n        filename: fileName.value,\n        url: fileUrl.value\n      });\n    }\n  };\n\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"button\",\n    value: \"\\u9023\\u7DDA\",\n    onClick: connectWebSocket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"button\",\n    value: \"\\u9001\\u51FA\\u8A0A\\u606F\",\n    onClick: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/home\",\n    render: props => React.createElement(File, Object.assign({}, props, {\n      add: add,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/class\",\n    component: PDF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))), React.createElement(Chat, {\n    ask: Question,\n    Clear: Clear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Hsi/Desktop/WebProg2019/mid/src/App.js"],"names":["React","useState","useEffect","Component","BrowserRouter","NavLink","Switch","Route","Redirect","ReactDom","webSocket","File","Chat","Menu","PDF","Button","Input","App","element","id","document","getElementById","status","messages","textarea","username","clearBtn","fileName","fileUrl","socket","setSocket","connect","connectWebSocket","c","initWebSocket","on","message","console","log","data","showPdf","length","childNodes","updateList","clearList","sendMessage","emit","x","createElement","setAttribute","textContent","name","body","appendChild","Question","e","key","shiftKey","value","preventDefault","Clear","focus","add","filename","url","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport {\n  BrowserRouter,\n  NavLink,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport ReactDom from \"react-dom\";\nimport \"./index.css\";\nimport webSocket from \"socket.io-client\";\nimport File from \"./components/File\";\nimport Chat from \"./components/Question\";\nimport Menu from \"./components/menu\";\nimport PDF from \"./components/PDF\";\nimport { Button, Input } from \"antd\";\nimport \"antd/dist/antd.css\";\n//=============================Variables=================================\nfunction App() {\n  // Getting Elements\n  const element = id => {\n    return document.getElementById(id);\n  };\n  const status = element(\"status\");\n  const messages = element(\"messages\");\n  const textarea = element(\"textarea\");\n  const username = element(\"username\");\n  const clearBtn = element(\"clear\");\n  const fileName = element(\"filename\");\n  const fileUrl = element(\"url\");\n  const [socket, setSocket] = useState(null);\n  let connect = 0;\n  //==============================Server=================================\n  const connectWebSocket = () => {\n    setSocket(webSocket(\"http://localhost:3000\"));\n    //開啟\n  };\n\n  useEffect(() => {\n    if (connect === 0) {\n      setSocket(webSocket(\"http://localhost:3000\"));\n      connect = 1;\n    }\n    if (socket) {\n      c; //onsole.log(status.textContent);\n      initWebSocket();\n    }\n  }, [socket]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    socket.on(\"getMessage\", message => {\n      console.log(message);\n    });\n\n    socket.on(\"fileOutput\", data => {\n      const showPdf = element(\"showPdf\");\n      console.log(PDF);\n      //showPdf.setAttribute(\"src\", data.url);\n    });\n\n    socket.on(\"init\", data => {\n      if (data.length && messages.childNodes.length === 0) updateList(data);\n    });\n\n    socket.on(\"output\", data => {\n      if (data.length) updateList(data);\n    });\n\n    socket.on(\"cleared\", () => {\n      clearList();\n    });\n  };\n  //=======================================Ask===========================================\n  const sendMessage = () => {\n    //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n    socket.emit(\"getMessage\", \"只回傳給發送訊息的 client\");\n  };\n\n  const updateList = data => {\n    for (let x = 0; x < data.length; x++) {\n      // Building out message div\n      const message = document.createElement(\"div\");\n      message.setAttribute(\"class\", \"chat-message\");\n      message.textContent = data[x].name + \": \" + data[x].body;\n      messages.appendChild(message);\n      //            messages.insertBefore(message, messages.firstChild)\n    }\n  };\n  const Question = e => {\n    if (e.key === \"Enter\" && e.shiftKey == false) {\n      // Emit to server input\n      socket.emit(\"input\", {\n        name: username.value,\n        body: textarea.value\n      });\n      e.preventDefault();\n    }\n  };\n  //=================================================================================\n  const Clear = () => {\n    clearList();\n    socket.emit(\"clear\");\n  };\n\n  // Clear Message\n\n  const clearList = () => {\n    messages.textContent = \"\";\n    username.value = \"\";\n    username.focus();\n  };\n  //======================================File=======================================\n\n  const add = e => {\n    if (e.key === \"Enter\" && e.shiftKey == false) {\n      // Emit to server input\n      socket.emit(\"file\", {\n        filename: fileName.value,\n        url: fileUrl.value\n      });\n    }\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"Wrapper\">\n        <input type=\"button\" value=\"連線\" onClick={connectWebSocket} />\n        <input type=\"button\" value=\"送出訊息\" onClick={sendMessage} />\n        <div className=\"container\">\n          <div className=\"row\">\n            <Menu />\n            <div className=\"Add\">\n              <Switch>\n                <Route\n                  path=\"/home\"\n                  render={props => <File {...props} add={add} />}\n                />\n                <Route path=\"/class\" component={PDF} />\n              </Switch>\n            </div>\n            <Chat ask={Question} Clear={Clear} />\n          </div>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}