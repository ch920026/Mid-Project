{"ast":null,"code":"import _slicedToArray from \"/Users/Hsi/Desktop/WebProg2019/mid/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hsi/Desktop/WebProg2019/mid/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport webSocket from 'socket.io-client';\n\nconst Main = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        ws = _useState2[0],\n        setWs = _useState2[1];\n\n  const connectWebSocket = () => {\n    //開啟\n    setWs(webSocket('http://localhost:3000'));\n  };\n\n  useEffect(() => {\n    if (ws) {\n      //連線成功在 console 中打印訊息\n      console.log('success connect!'); //設定監聽\n\n      initWebSocket();\n    }\n  }, [ws]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    ws.on('getMessage', message => {\n      console.log(message);\n    });\n  };\n\n  const sendMessage = () => {\n    //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n    ws.emit('getMessage', '只回傳給發送訊息的 client');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"button\",\n    value: \"\\u9023\\u7DDA\",\n    onClick: connectWebSocket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"button\",\n    value: \"\\u9001\\u51FA\\u8A0A\\u606F\",\n    onClick: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n};\n\nReactDom.render(React.createElement(Main, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/Hsi/Desktop/WebProg2019/mid/src/index.js"],"names":["React","useState","useEffect","ReactDom","webSocket","Main","ws","setWs","connectWebSocket","console","log","initWebSocket","on","message","sendMessage","emit","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACIJ,QAAQ,CAAC,IAAD,CADZ;AAAA;AAAA,QACRK,EADQ;AAAA,QACLC,KADK;;AAGf,QAAMC,gBAAgB,GAAG,MAAM;AAC3B;AACAD,IAAAA,KAAK,CAACH,SAAS,CAAC,uBAAD,CAAV,CAAL;AACH,GAHD;;AAKAF,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGI,EAAH,EAAM;AACF;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAFE,CAGF;;AACAC,MAAAA,aAAa;AAChB;AACJ,GAPQ,EAOP,CAACL,EAAD,CAPO,CAAT;;AASA,QAAMK,aAAa,GAAG,MAAM;AACxB;AACAL,IAAAA,EAAE,CAACM,EAAH,CAAM,YAAN,EAAoBC,OAAO,IAAI;AAC3BJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACH,KAFD;AAGH,GALD;;AAOA,QAAMC,WAAW,GAAG,MAAM;AACtB;AACAR,IAAAA,EAAE,CAACS,IAAH,CAAQ,YAAR,EAAsB,kBAAtB;AACH,GAHD;;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,cAA3B;AAAgC,IAAA,OAAO,EAAEP,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,0BAA3B;AAAkC,IAAA,OAAO,EAAEM,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAnCD;;AAqCAX,QAAQ,CAACa,MAAT,CAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDom from 'react-dom'\nimport webSocket from 'socket.io-client'\n\nconst Main = () => {\n    const [ws,setWs] = useState(null)\n\n    const connectWebSocket = () => {\n        //開啟\n        setWs(webSocket('http://localhost:3000'))\n    }\n\n    useEffect(()=>{\n        if(ws){\n            //連線成功在 console 中打印訊息\n            console.log('success connect!')\n            //設定監聽\n            initWebSocket()\n        }\n    },[ws])\n\n    const initWebSocket = () => {\n        //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n        ws.on('getMessage', message => {\n            console.log(message)\n        })\n    }\n\n    const sendMessage = () => {\n        //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n        ws.emit('getMessage', '只回傳給發送訊息的 client')\n    }\n\n    return(\n        <div>\n            <input type='button' value='連線' onClick={connectWebSocket} />\n            <input type='button' value='送出訊息' onClick={sendMessage} />\n        </div>\n    )\n}\n\nReactDom.render(<Main />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}