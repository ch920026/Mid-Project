{"ast":null,"code":"import _slicedToArray from \"/Users/Hsi/Desktop/WebProg2019/mid/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Hsi/Desktop/WebProg2019/mid/src/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./index.css\";\nimport webSocket from \"socket.io-client\";\nimport File from \"./components/File\";\n\nconst Main = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        socket = _useState2[0],\n        setSocket = _useState2[1];\n\n  const connectWebSocket = () => {\n    setSocket(webSocket(\"http://localhost:3000\")); //開啟\n  };\n\n  useEffect(() => {\n    if (socket) {\n      //連線成功在 console 中打印訊息\n      //console.log(\"success connect!\");\n      //設定監聽\n      initWebSocket();\n    }\n  }, [socket]);\n\n  const element = id => {\n    return document.getElementById(id);\n  }; // Getting Elements\n\n\n  const status = element(\"status\");\n  const messages = element(\"messages\");\n  const textarea = element(\"textarea\");\n  const username = element(\"username\");\n  const clearBtn = element(\"clear\");\n  const fileName = element(\"filename\");\n  const fileUrl = element(\"url\");\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    socket.on(\"getMessage\", message => {\n      console.log(message);\n    });\n  };\n\n  const sendMessage = () => {\n    //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n    socket.emit(\"getMessage\", \"只回傳給發送訊息的 client\");\n  };\n\n  let statusDefault = status.textContent;\n\n  const setStatus = s => {\n    // Setting status\n    status.textContent = s; // Resetting status to default every x seconds\n\n    if (s !== statusDefault) {\n      setTimeout(() => {\n        setStatus(statusDefault);\n      }, 2000);\n    }\n  };\n\n  const add = e => {\n    var fileUrl = document.getElementById(\"url\");\n    var fileName = document.getElementById(\"filename\");\n\n    if (e.key === \"Enter\" && e.shiftKey == false) {\n      // Emit to server input\n      console.log(\"launch\");\n      socket.emit(\"file\", {\n        filename: fileName.value,\n        url: fileUrl.value\n      });\n    }\n  };\n\n  const updateList = data => {\n    for (let x = 0; x < data.length; x++) {\n      // Building out message div\n      const message = document.createElement(\"div\");\n      message.setAttribute(\"class\", \"chat-message\");\n      message.textContent = data[x].name + \": \" + data[x].body;\n      messages.appendChild(message); //            messages.insertBefore(message, messages.firstChild)\n    }\n  };\n\n  const clearList = () => {\n    messages.textContent = \"\";\n    username.value = \"\";\n    username.focus();\n  }; // Handling initialization\n\n\n  socket.on(\"init\", data => {\n    if (data.length && messages.childNodes.length === 0) updateList(data);\n  });\n  fileUrl.addEventListener(\"keydown\", event => {\n    if (event.which === 13 && event.shiftKey == false) {\n      // Emit to server input\n      socket.emit(\"file\", {\n        filename: fileName.value,\n        url: fileUrl.value\n      });\n      event.preventDefault();\n    }\n  }); // Handling Output\n\n  socket.on(\"output\", data => {\n    if (data.length) updateList(data);\n  }); // Getting Status From Server\n\n  socket.on(\"status\", data => {\n    setStatus(typeof data === \"object\" ? data.message : data); // If status is clear, clear text\n\n    if (data.clear) {\n      textarea.value = \"\";\n    }\n  });\n  socket.on(\"fileOutput\", data => {\n    const showPdf = element(\"showPdf\");\n    showPdf.setAttribute(\"src\", data.url);\n  }); // Handle Input\n\n  textarea.addEventListener(\"keydown\", event => {\n    if (event.which === 13 && event.shiftKey == false) {\n      // Emit to server input\n      socket.emit(\"input\", {\n        name: username.value,\n        body: textarea.value\n      });\n      event.preventDefault();\n    }\n  }); // Handle Chat Clear\n\n  clearBtn.addEventListener(\"click\", () => {\n    clearList();\n    socket.emit(\"clear\");\n  }); // Clear Message\n\n  socket.on(\"cleared\", () => {\n    clearList();\n  });\n  return React.createElement(\"div\", {\n    className: \"Wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"button\",\n    value: \"\\u9023\\u7DDA\",\n    onClick: connectWebSocket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"button\",\n    value: \"\\u9001\\u51FA\\u8A0A\\u606F\",\n    onClick: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"clear\",\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Clear\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(File, {\n    add: add,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(\"iframe\", {\n    src: \"https://www.tutorialspoint.com/mongodb/mongodb_tutorial.pdf\",\n    id: \"showPdf\",\n    frameBorder: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"chat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"messages\",\n    className: \"card-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    className: \"form-control\",\n    placeholder: \"Enter name...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    id: \"textarea\",\n    className: \"form-control\",\n    placeholder: \"Enter message...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })))));\n};\n\nReactDom.render(React.createElement(Main, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 198\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/Hsi/Desktop/WebProg2019/mid/src/index.js"],"names":["React","useState","useEffect","ReactDom","webSocket","File","Main","socket","setSocket","connectWebSocket","initWebSocket","element","id","document","getElementById","status","messages","textarea","username","clearBtn","fileName","fileUrl","on","message","console","log","sendMessage","emit","statusDefault","textContent","setStatus","s","setTimeout","add","e","key","shiftKey","filename","value","url","updateList","data","x","length","createElement","setAttribute","name","body","appendChild","clearList","focus","childNodes","addEventListener","event","which","preventDefault","clear","showPdf","render"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./index.css\";\nimport webSocket from \"socket.io-client\";\nimport File from \"./components/File\";\n\nconst Main = () => {\n  const [socket, setSocket] = useState(null);\n\n  const connectWebSocket = () => {\n    setSocket(webSocket(\"http://localhost:3000\"));\n    //開啟\n  };\n\n  useEffect(() => {\n    if (socket) {\n      //連線成功在 console 中打印訊息\n      //console.log(\"success connect!\");\n      //設定監聽\n      initWebSocket();\n    }\n  }, [socket]);\n\n  const element = id => {\n    return document.getElementById(id);\n  };\n\n  // Getting Elements\n  const status = element(\"status\");\n  const messages = element(\"messages\");\n  const textarea = element(\"textarea\");\n  const username = element(\"username\");\n  const clearBtn = element(\"clear\");\n  const fileName = element(\"filename\");\n  const fileUrl = element(\"url\");\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    socket.on(\"getMessage\", message => {\n      console.log(message);\n    });\n  };\n\n  const sendMessage = () => {\n    //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n    socket.emit(\"getMessage\", \"只回傳給發送訊息的 client\");\n  };\n\n  let statusDefault = status.textContent;\n\n  const setStatus = s => {\n    // Setting status\n    status.textContent = s;\n\n    // Resetting status to default every x seconds\n    if (s !== statusDefault) {\n      setTimeout(() => {\n        setStatus(statusDefault);\n      }, 2000);\n    }\n  };\n\n  const add = e => {\n    var fileUrl = document.getElementById(\"url\");\n    var fileName = document.getElementById(\"filename\");\n\n    if (e.key === \"Enter\" && e.shiftKey == false) {\n      // Emit to server input\n      console.log(\"launch\");\n      socket.emit(\"file\", {\n        filename: fileName.value,\n        url: fileUrl.value\n      });\n    }\n  };\n\n  const updateList = data => {\n    for (let x = 0; x < data.length; x++) {\n      // Building out message div\n      const message = document.createElement(\"div\");\n      message.setAttribute(\"class\", \"chat-message\");\n      message.textContent = data[x].name + \": \" + data[x].body;\n      messages.appendChild(message);\n      //            messages.insertBefore(message, messages.firstChild)\n    }\n  };\n\n  const clearList = () => {\n    messages.textContent = \"\";\n    username.value = \"\";\n    username.focus();\n  };\n\n  // Handling initialization\n  socket.on(\"init\", data => {\n    if (data.length && messages.childNodes.length === 0) updateList(data);\n  });\n\n  fileUrl.addEventListener(\"keydown\", event => {\n    if (event.which === 13 && event.shiftKey == false) {\n      // Emit to server input\n      socket.emit(\"file\", {\n        filename: fileName.value,\n        url: fileUrl.value\n      });\n\n      event.preventDefault();\n    }\n  });\n\n  // Handling Output\n  socket.on(\"output\", data => {\n    if (data.length) updateList(data);\n  });\n\n  // Getting Status From Server\n  socket.on(\"status\", data => {\n    setStatus(typeof data === \"object\" ? data.message : data);\n\n    // If status is clear, clear text\n    if (data.clear) {\n      textarea.value = \"\";\n    }\n  });\n\n  socket.on(\"fileOutput\", data => {\n    const showPdf = element(\"showPdf\");\n\n    showPdf.setAttribute(\"src\", data.url);\n  });\n\n  // Handle Input\n  textarea.addEventListener(\"keydown\", event => {\n    if (event.which === 13 && event.shiftKey == false) {\n      // Emit to server input\n      socket.emit(\"input\", {\n        name: username.value,\n        body: textarea.value\n      });\n\n      event.preventDefault();\n    }\n  });\n\n  // Handle Chat Clear\n  clearBtn.addEventListener(\"click\", () => {\n    clearList();\n    socket.emit(\"clear\");\n  });\n\n  // Clear Message\n  socket.on(\"cleared\", () => {\n    clearList();\n  });\n\n  return (\n    <div className=\"Wrapper\">\n      <input type=\"button\" value=\"連線\" onClick={connectWebSocket} />\n      <input type=\"button\" value=\"送出訊息\" onClick={sendMessage} />\n      <div className=\"container\">\n        <button id=\"clear\" className=\"btn btn-danger\">\n          Clear\n        </button>\n        <div className=\"row\">\n          <div className=\"Add\">\n            <File add={add} />\n            <iframe\n              src=\"https://www.tutorialspoint.com/mongodb/mongodb_tutorial.pdf\"\n              id=\"showPdf\"\n              frameBorder=\"0\"\n            />\n          </div>\n          <div id=\"chat\">\n            <div className=\"card\">\n              <div id=\"messages\" className=\"card-block\" />\n            </div>\n            <br />\n            <input\n              type=\"text\"\n              id=\"username\"\n              className=\"form-control\"\n              placeholder=\"Enter name...\"\n            />\n            <br />\n            <textarea\n              id=\"textarea\"\n              className=\"form-control\"\n              placeholder=\"Enter message...\"\n            />\n            <div id=\"status\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nReactDom.render(<Main />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}